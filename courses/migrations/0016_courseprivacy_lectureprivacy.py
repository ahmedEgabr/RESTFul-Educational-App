# Generated by Django 3.2.9 on 2022-07-29 23:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0015_delete_privacy'),
    ]

    operations = [
        migrations.CreateModel(
            name='LecturePrivacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('option', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('shared', 'Shared'), ('limited_period', 'Public (for a Limited Period)')], default='private', max_length=15)),
                ('available_from', models.DateTimeField(blank=True, help_text='Must be set when choosing public (for a limited period) option.', null=True)),
                ('period', models.IntegerField(blank=True, help_text='Must be set when choosing public (for a limited period) option.', null=True)),
                ('period_type', models.CharField(blank=True, choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], help_text='Must be set when choosing public (for a limited period) option.', max_length=10)),
                ('enrollment_period', models.IntegerField(blank=True, help_text='\n    The period that the course will be availabe for the user form the date of the enrollment when the course was free.\n    Must be set when choosing public (for limited period) option.\n    ', null=True, verbose_name='When avilable for free, users can enroll it for')),
                ('enrollment_period_type', models.CharField(blank=True, choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], help_text='Must be set when choosing public (for a limited period) option.', max_length=10)),
                ('is_downloadable', models.BooleanField(default=True, verbose_name='Is Downloadable')),
                ('is_downloadable_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Downloadable for Enrolled Users Only')),
                ('is_quiz_available', models.BooleanField(default=True, verbose_name='Is Quiz Available')),
                ('is_quiz_available_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Quiz Available for Enrolled Users Only')),
                ('is_attachements_available', models.BooleanField(default=True, verbose_name='Is Attachemets Available')),
                ('is_attachements_available_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Attachements Available for Enrolled Users Only')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_lectureprivacys', to=settings.AUTH_USER_MODEL)),
                ('lecture', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='privacy', to='courses.lecture')),
                ('shared_with', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='updated_lectureprivacys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoursePrivacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('option', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('shared', 'Shared'), ('limited_period', 'Public (for a Limited Period)')], default='private', max_length=15)),
                ('available_from', models.DateTimeField(blank=True, help_text='Must be set when choosing public (for a limited period) option.', null=True)),
                ('period', models.IntegerField(blank=True, help_text='Must be set when choosing public (for a limited period) option.', null=True)),
                ('period_type', models.CharField(blank=True, choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], help_text='Must be set when choosing public (for a limited period) option.', max_length=10)),
                ('enrollment_period', models.IntegerField(blank=True, help_text='\n    The period that the course will be availabe for the user form the date of the enrollment when the course was free.\n    Must be set when choosing public (for limited period) option.\n    ', null=True, verbose_name='When avilable for free, users can enroll it for')),
                ('enrollment_period_type', models.CharField(blank=True, choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], help_text='Must be set when choosing public (for a limited period) option.', max_length=10)),
                ('is_downloadable', models.BooleanField(default=True, verbose_name='Is Downloadable')),
                ('is_downloadable_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Downloadable for Enrolled Users Only')),
                ('is_quiz_available', models.BooleanField(default=True, verbose_name='Is Quiz Available')),
                ('is_quiz_available_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Quiz Available for Enrolled Users Only')),
                ('is_attachements_available', models.BooleanField(default=True, verbose_name='Is Attachemets Available')),
                ('is_attachements_available_for_enrolled_users_only', models.BooleanField(default=True, verbose_name='Is Attachements Available for Enrolled Users Only')),
                ('course', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='privacy', to='courses.course')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_courseprivacys', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='updated_courseprivacys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
