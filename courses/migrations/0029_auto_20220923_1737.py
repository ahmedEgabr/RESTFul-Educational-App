# Generated by Django 3.2.9 on 2022-09-23 15:37

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0028_auto_20220915_0122'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoursePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('duration_type', models.CharField(blank=True, choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], max_length=10, null=True)),
                ('lifetime_access', models.BooleanField(default=False)),
                ('is_free_for_all_countries', models.BooleanField(default=False, help_text='<small class="text-warning">&#9888; When checked, all plan prices is going to be deactivated.</small>')),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, help_text='<small class="text-warning">&#x26A0; When not ckecked, this price will not be visable to the students.</small>')),
            ],
            options={
                'verbose_name_plural': 'Courses Pricing Plans',
            },
        ),
        migrations.RemoveField(
            model_name='courseprivacy',
            name='is_downloadable',
        ),
        migrations.RemoveField(
            model_name='courseprivacy',
            name='is_downloadable_for_enrolled_users_only',
        ),
        migrations.RemoveField(
            model_name='courseprivacy',
            name='is_quiz_available',
        ),
        migrations.RemoveField(
            model_name='courseprivacy',
            name='is_quiz_available_for_enrolled_users_only',
        ),
        migrations.RemoveField(
            model_name='lectureprivacy',
            name='available_from',
        ),
        migrations.RemoveField(
            model_name='lectureprivacy',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='lectureprivacy',
            name='duration_type',
        ),
        migrations.RemoveField(
            model_name='lectureprivacy',
            name='enrollment_duration',
        ),
        migrations.RemoveField(
            model_name='lectureprivacy',
            name='enrollment_duration_type',
        ),
        migrations.AddField(
            model_name='courseprivacy',
            name='discount_percentage',
            field=models.IntegerField(blank=True, help_text='\n        Is used when using (for a limited duration) option.\n        Numbers in %\n        ', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='courseprivacy',
            name='is_free',
            field=models.BooleanField(default=True, help_text='Is used when using (for a limited duration) option.'),
        ),
        migrations.AddField(
            model_name='courseprivacy',
            name='show_contact_admin_on_free_enrollment',
            field=models.BooleanField(default=True, help_text='On uncheck this option, the user can enroll the course automatically when it is free.', verbose_name='Show Contact Admin Button on Free Enrollment'),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='courseprivacy',
            name='enrollment_duration',
            field=models.IntegerField(blank=True, help_text='\n            The duration that the course will be availabe for the user form the date of the enrollment when the course was free.\n            Must be set when choosing public (for limited duration) option.\n        ', null=True),
        ),
        migrations.AlterField(
            model_name='lecture',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.RenameModel(
            old_name='CoursePlanPrice',
            new_name='PlanPrice',
        ),
        migrations.DeleteModel(
            name='CoursePricingPlan',
        ),
        migrations.AddField(
            model_name='courseplan',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_plans', to='courses.course'),
        ),
        migrations.AddField(
            model_name='courseplan',
            name='created_by',
            field=django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_courseplans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courseplan',
            name='updated_by',
            field=django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, related_name='updated_courseplans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='planprice',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='courses.courseplan'),
        ),
        migrations.AlterUniqueTogether(
            name='courseplan',
            unique_together={('course', 'duration', 'duration_type')},
        ),
    ]
